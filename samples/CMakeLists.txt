cmake_minimum_required(VERSION 3.11)

project(Samples LANGUAGES CXX)

set(SAMPLES_INSTALL_DIR ${PROJECT_SOURCE_DIR}/bin)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${SAMPLES_INSTALL_DIR}/$<CONFIG>/)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${SAMPLES_INSTALL_DIR}/$<CONFIG>/)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${SAMPLES_INSTALL_DIR}/$<CONFIG>/)

if(APPLE)
    list(APPEND SAMPLES_COMPILE_DEFINITION -DRIF_USE_METAL=1)
    message(">> Building RadeonProImageProcessing to use metal backend")
endif()

list(APPEND SAMPLES_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/./")
list(APPEND SAMPLES_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/ImageTools/")
list(APPEND SAMPLES_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/../include/")

list(APPEND SAMPLES_INCLUDE_LIB RadeonImageFilters)

if(WIN32)
    list(APPEND SAMPLES_COMPILE_DEFINITION -DWIN32)
    list(APPEND SAMPLES_COMPILE_DEFINITION -D_CRT_SECURE_NO_WARNINGS)
    
    add_compile_options("/MP")
elseif(APPLE)
    add_compile_options("-fvisibility=hidden") 
    add_compile_options("-std=c++11") 
    add_compile_options("-fPIC") 
else()
    add_compile_options("-fvisibility=hidden") 
    add_compile_options("-std=c++14") 
    add_compile_options("-fPIC")
endif()

if(WIN32)
    list(APPEND SAMPLES_INCLUDE_LIB opengl32)
elseif(APPLE)
    link_libraries("-framework OpenCL")	
    link_libraries("-framework Cocoa")
    link_libraries("-framework OpenGL")
    link_libraries("-framework IOKit")
else()
    list(APPEND SAMPLES_INCLUDE_LIB GL)
    list(APPEND SAMPLES_INCLUDE_LIB pthread)
    list(APPEND SAMPLES_INCLUDE_LIB dl)
endif()

include_directories(${SAMPLES_INCLUDE_DIR})
add_definitions(${SAMPLES_COMPILE_DEFINITION})
link_libraries(${SAMPLES_INCLUDE_LIB})
add_link_options(${SAMPLES_LINK_OPTIONS})

if(EXISTS ${PROJECT_SOURCE_DIR}/BilateralDenoise)
    add_subdirectory(BilateralDenoise)
endif()
if(EXISTS ${PROJECT_SOURCE_DIR}/MLAA)
    add_subdirectory(MLAA)
endif()
if(EXISTS ${PROJECT_SOURCE_DIR}/GaussianBlur)
    add_subdirectory(GaussianBlur)
endif()
if(EXISTS ${PROJECT_SOURCE_DIR}/ToneMapping)
    add_subdirectory(ToneMapping)
endif()
if(EXISTS ${PROJECT_SOURCE_DIR}/EdgeDetection)
    add_subdirectory(EdgeDetection)
endif()
if(EXISTS ${PROJECT_SOURCE_DIR}/MedianDenoise)
    add_subdirectory(MedianDenoise)
endif()
if(EXISTS ${PROJECT_SOURCE_DIR}/UserDefined)
    add_subdirectory(UserDefined)
endif()
if(EXISTS ${PROJECT_SOURCE_DIR}/Denoisers)
    add_subdirectory(Denoisers)
endif()
if(EXISTS ${PROJECT_SOURCE_DIR}/PhotoToneMapping)
    add_subdirectory(PhotoToneMapping)
endif()
if(EXISTS ${PROJECT_SOURCE_DIR}/Bloom)
    add_subdirectory(Bloom)
endif()
if(EXISTS ${PROJECT_SOURCE_DIR}/AIDenoiser)
    add_subdirectory(AIDenoiser)
endif()
if(EXISTS ${PROJECT_SOURCE_DIR}/OpenImageDenoiser)
    add_subdirectory(OpenImageDenoiser)
endif()
